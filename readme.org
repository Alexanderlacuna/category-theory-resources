* Category Theory Resources

[[./img/category-theory-cover.png]]

This is a curation of introductory materials aimed at an enthusiast who wants to learn Category Theory. I have only recently gotten into learning Category Theory and as a result this list is only a partial sampling of the great wealth of materials out there. Please send a [[https://twitter.com/prathyvsh][tweet]], if you think I have missed out some great work in the field in this repo.

* Why learn Category Theory?

Category Theory is considered by many to be an involved domain of study to get into. It becomes a ground for unification of mathematical ideas for a wide variety of domains. And the way it achieves this is by taking an abstract vantage point on the ideas, their properties, and processes in these disciplines. This viewpoint gives it the ability to reason about analogies happening in distinct domains and draw comparison across the patterns happening in them in a rigorous way.

This abstract viewpoint is *both a strength and weakness* of the approach. The abstract nature of the subject makes it very powerful by giving it the generality to unite very different fields of study such as say algebraic topology, probability theory, real analysis, functional analysis, number theory, combinatorics, and computation. But at the same time this abstract nature means that it becomes a rather tough endeavour to make its bearings on concrete subjects of study. It makes it hard to elucidate these without first learning enough terminology and understanding to set up a framework for discourse for the discipline under the study.

#+BEGIN_HTML
<a href="https://math.ucr.edu/home/baez/rosetta.pdf"><img align="center" src="./img/rosetta-stone.png" /></a>
#+END_HTML

Category theory in certain communities of practice has moved towards being the heart of capturing the correspondences across different systems. One of the great papers that catalogues the gems from taking this vantage point is the *[[https://math.ucr.edu/home/baez/rosetta.pdf][Rosetta Stone paper]]* by John Carlos Baez and Mike Stay.

In this paper they detail how disparate domains like physics, topology, logic, and computation show strong parallels between their concepts when seen from the Category Theory viewpoint. As can be seen in the table, they point out the parallels between concepts among different domains of inquiry. Seen this way, Category Theory gives a language and a setting to talk about working concepts in different domains of inquiries and unifies them using higher level abstractions.

Ultimately, as Christopher Strachey put it, the divide between theory and practice is artificial and injurious. For doing computing both needs to be put together in a symbiotic circle to *make each other a fertile field of knowledge and action*. Category Theory in this manner is said to be a subject whose keen study will payoff in the form of better decision-making in your day-to-day job over the long term. To articulate exactly how this is something a bit elusive to me at the moment, I am only seeing glimpses of how the concepts give me a way to talk about ideas happening in my daily programming. As I’m a learner only trying to come in terms with the deep implications Category Theory has on my work, I will need some more time to reframe this section to articulate the benefits of Category Theory in the long term.

So this repository is a curation of the best resources that come across my way and that has helped me in understanding the lay of the land better. Hope you enjoy going through it as much as I enjoyed in putting it together. Happy learning!

* Introduction

#+BEGIN_HTML
<img align="left" src="./img/samuel-eilenberg.png" />
<img align="left" src="./img/saunders-maclane.png" />
#+END_HTML

Category Theory is a field of study that emerged around 1940s. By that time, the tangled web of inquiries in mathematics had accumulated many ideas from other fields. The inventors used Category Theory as a ground for unifying these different ideas under a common set of abstractions by studying these broad ranging ideas deeply. It was invented by *Samuel Eilenberg* and *Saunders Mac Lane* to study algebraic topology, where they wanted to introduce the idea of natural transformation to make tractable the idea of naturality occuring on functors between functors (A functor is a category theoretical term that roughly means functions and the idea of naturality can very roughly be compared to the idea of talking about a concept without a given frame of reference).

#+BEGIN_HTML
<br />
<a href="https://garlandus.co/OfGroupsAndMonads.html"><img align="left" src="./img/on-groups-and-monads.png" /></a>
#+END_HTML

If you enjoy reading the history of the subject before diving into it, I highly recommend this accessible work by Garlandus [[https://garlandus.co/OfGroupsAndMonads.html][describing the emergence of Category Theory]]. Garlandus’ essay holds a high place in my mind, it is the kind of work that gives a sufficient background on the field discussing details of how it took shape as a result of contributions between multiple people. He locates *Hilbert’s Göttingen* as a central locus that lead to the germination of work on Category Theory.


#+BEGIN_HTML
<br />
<img align="left" src="./img/samuel-eilenberg.png" />
<img align="left" src="./img/eilenberg-automata.png" />
#+END_HTML

Now, seeing that the subject emerged from algebraic topology, the application to Computer Science may seem arbitrary. But this came after deep investigations into computational structures and programming since around 1960s, where multiple links between algebra, automata, computational control/data structures, recursion schemes were unearthed. If you are interested in knowing about it more deeply, I have a [[https://github.com/prathyvsh/morphisms-of-computational-structures][repo]], which is a work in progress, where I try to unravel these links. A curious fact that I have to mention is that, one of the co-inventors of Category Theory, Samuel Eilenberg, went on to apply his ideas to automata after inventing Category Theory!

Now that we have seen how Category Theory came around, let us look at the resources that can guide us in building a working knowledge of the subject.

* Overview

Because of the standing of Category Theory as a general domain of inquiry, I have constantly felt it better to first get a cursory knowledge in functional programming and abstract algebra before tackling the subject. These paradigms are closer to the work done in Category Theory. If you come around to Category Theory without having some concrete experience in dealing with problems to which you can relate the ideas you learn here, I feel it might be a bit hard to connect with this domain of study and gain intuition into to why such machinery is needed.

Functional programming techniques are a way in which a lot of these concepts find a space to talk about them and ground them in a concrete setting where their behaviours can be probed and pondered. So I proceed to recommend some resource that might help you develop some functional programming knowledge before you come around to Category Theory.

#+BEGIN_HTML
<div>
<img align="left" height="300px" src="./img/htdp-cover.gif" />
#+END_HTML

** [[https://htdp.org][How to Design Programs (First Edition)]]

How to Design Programs is an accessible introduction to functional programming. The book is thorough in its coverage of essential ideas and slowly walks a novice through exercises to understand the concepts and how to put them to use in practical problems that one may encounter in their daily practice.

#+BEGIN_HTML
</div>
<br/><br/><br/><br/><br/><br/>
<div>
<img align="left" height="300px" src="./img/intro-to-fp-cover.jpg" />  
#+END_HTML

** [[https://amzn.to/2S129wI][Introduction to Functional Programming]]

Introduction to Functional Programming by Richard Bird and Philipp Wadler is a more formal treatment of functional programming. They use the language Miranda to elucidate the concepts.

#+BEGIN_HTML
</div>
<br/><br/><br/><br/><br/><br/><br/><br/>
<div>
<img align="left" height="300px" src="./img/sicp-cover.jpg" />
#+END_HTML

** [[https://mitpress.mit.edu/sites/default/files/sicp/full-text/book/book.html][Structure and Interpretation of Computer Programs]]

SICP by Abelson and Sussman is considered a classic text that provides a synthesis of great ideas of computer science using LISP. It is a natural second choice once you have mastered the ideas in HtDP.

#+BEGIN_HTML
</div>
<br/><br/><br/><br/><br/><br/><br/><br/>
#+END_HTML

Reading some or all of the books here will give you a solid footing in functional programming. With that knowledge under your belt, next step is to develop sufficient understanding of the field of mathematics. This knowledge would make the transition into CT much more smooth as there are deep links within CT that lead you onto very different domains and having a well-rounded knowledge of the field would help you to ease into fields which might be remote from your experience, but would nevertheless hold the gold, so to speak.


* Breadth and Depth

#+BEGIN_HTML
<br />
<img align="left" src="./img/saunders-maclane.png" />  
<img align="left" height="300px" src="./img/mathematics-form-and-function.jpg" />  
#+END_HTML

** Mathematics Form and Function

To make this case, let me first mention this book by Saunders Mac Lane, the co-inventor of Category Theory, where he gives a tour of ideas of mathematics in a comprehensive way. This book doubles out as an atlas of mathematical inquiry as there are multiple maps in this book that give you an idea on how to navigate the field. Such is the kind of breadth and depth that has gone into building Category Theory. I don’t mean this as something to intimidate the reader, but just to provide the awareness that the field is vast and finds application in many areas, computation being one among many. Mastery of all these fields is not a pre-requisite to be proficient in it. But it has to be pointed out that the masters of the subject have done a great deal of exploration to bring forth the fruits of Category Theory.

#+BEGIN_HTML
<img align="center" width="400px" src="./img/mathematics-form-and-function-map.jpg" />  
#+END_HTML

* Introduction through Abstract Algebra

Now an adjacent field to Category Theory is Abstract Algebra. The route I have taken is to first learn abstract algebra which undergirds the algebraic species that are often subjects of study in Category Theory. To make sense of these, let me mention a few books. It is not mandatory reading, if you want to dive first into Category Theory. In fact some of the books that I have put together here allows one to learn Category Theory without much prerequisite knowledge but abstract algebra is a field that I have felt is most proximate and has aided me ease into Category Theory texts.


#+BEGIN_HTML
<br />
<img align="left" height="300px" src="./img/a-book-of-abstract-algebra.jpg" />  
#+END_HTML

** [[https://amzn.to/2S3SOVc][A Book of Abstract Algebra]]
*Charles Pinter*

This book by Charles Pinter reads not like a textbook but like a description of the field.

#+BEGIN_HTML
<br /> <br /> <br /> <br /> <br /> <br /> <br /> <br />
<img align="left" height="300px" src="./img/a-concrete-approach-to-abstract-algebra.png" />  
#+END_HTML

** [[https://archive.org/details/AConcreteApproachToAbstractAlgebra][A Concrete Approach to Abstract Algebra]]
*W. W. Sawyer*

A narrative approach for Abstract Algebra is given by Sawyer by focussing on concrete applications.

#+BEGIN_HTML
<br /> <br /> <br /> <br /> <br /> <br /> <br /> <br />
<img align="left" height="300px" src="./img/visual-group-theory.jpg" />  
#+END_HTML

** Visual Group Theory
*Nathan Carter*

Visual Group Theory by Nathan Carter gives an overview of the field by relying on visualizations. His playground for the cayley diagram explorations gives a good idea of the quality of work that has gone into producing this book.

#+BEGIN_HTML
<br /> <br /> <br /> <br /> <br /> <br /> <br /> <br />
#+END_HTML

I will try to expand on this catalogue once I have better perspective, but these three seem to be the most promising to get a good overview of the algebraic structures.

Once the above works are studied, starting with Category Theory texts should be an easy process. I will now proceed to list the works which will help an enthusiast to navigate the field of Category Theory and understand it deeper.

* Visual Nature of Category Theory

#+BEGIN_HTML
<img align="left" src="./img/modular-lattice-mckeown.gif" />  
#+END_HTML

Category Theory is the study of objects and morphisms and for this purpose, I find it most important to have a visual setting for exploring these ideas. Many of the ideas being talked about in Category Theory spawns dynamic pictures of morphisms in my head, but I find it hard to visualize them as there is so little Category Theory with pictures around. What is pictured here is an animation by James McKeown of a modular lattice rotating on its vertical axis. These sort of algebraic structures are a part of what we study with Category Theory. And I think there is a certain truth to the idea that geometry is the missing link to ground the abstract ideas that is being studied under Category Theory.

#+BEGIN_HTML
<br />
<br />
<br />
<br />
#+END_HTML

* Jamie Vicary’s work

I came across this talk by Jamie Vicary on building tools for exploring Category Theory. His works [[https://globular.science][Globular.science]] and [[https://homotopy.io][Homotopy.io]] are (awe)inspiring. Do check out his talk titled *Category Theory: Visual Mathematics for the 21st Century* and his works to see how he connects proofs, programs, and geometry together in a triad!

*** Category Theory: Visual Mathematics for the 21st Century
#+BEGIN_HTML
<a href="https://www.youtube.com/watch?v=HdZk92s7z1U"><img src="./img/jamie-vicary-talk.jpg" /></a>
#+END_HTML

*** Globular.science and Homotopy.io 

#+BEGIN_HTML
<a href="https://homotopy.io"><img width="450px" src="./img/globular-science.png" /></a>
<a href="https://homotopy.io"><img width="500px" src="./img/homotopy-io.jpg" /></a>
<br /><br /><br /><br />
#+END_HTML

Now when studying category theory, to start seeing how the pieces fit together one has to recourse to abstract diagrams and attempt to connect these concepts with how the same concepts model things in a more visual domain, say topology. This recourse is my best bet at the moment to gain the geometric intuitions in Category Theory when learning. If you find geometric intuitions helpful in understanding mathematics, let me draw your attention to this incomplete but [[https://boris-marinov.github.io/category-theory-illustrated/][beautiful work]] by Boris Marinov.

#+BEGIN_HTML
<a href="https://boris-marinov.github.io/category-theory-illustrated/"><img src="./img/boris-category-theory-illustrated.svg" /></a>
#+END_HTML

* Books

#+BEGIN_HTML
<h2><a href="https://amzn.to/2RUAIoU">Seven Sketches in Compositionality</a></h2>
<img width="150px" align="left" src="./img/seven-sketches-in-compositionality.jpg" />
<img src="./img/david-spivak.png" />
<img src="./img/brendan-fong.png" />
<p>David I. Spivak and Brendan Fong</p>
<br /><br /><br /><br />
#+END_HTML

This book is considered to be an entry level read into Category Theory. The book samples 7 topics from category to offer a tour of its applications. By showing concrete real life examples are emphasized, a taste for the abstract theoretical concepts is given. It is a pretty good book to get an understanding of the use of Category Theory which a lot of people are puzzled about.

A free electronic edition is available here: [[https://arxiv.org/abs/1803.05316]]

#+BEGIN_HTML
<h2><a href="https://amzn.to/2zjvbli">Conceptual Mathematics: A First Introduction to Categories</a></h2>
<img width="150px" align="left" src="./img/conceptual-mathematics.jpg" />
<img src="./img/william-lawvere.png" />
<img src="./img/stephen-schaneul.png" />
<p>William Lawvere and Stephen Schaneul</p>
<br /><br /><br /><br />
#+END_HTML

#+BEGIN_HTML
<h2><a href="https://amzn.to/3brrok3">Algebra: Chapter 0</a></h2>
<img width="150px" align="left" src="./img/algebra-chapter-0.png" />
<img src="./img/paolo-aluffi.png" />
<p>Paolo Aluffi</p>
<br /><br /><br /><br />
#+END_HTML

Once you have covered the abstract algebra books described above, Aluffi’s book is a natural segue as a second course. The book starts by reviewing the basics and very early on gives the reader exposure to Category theoretical language to make sense of the algebraic structures. One curious fact about this book is that there are almost no references to outside resources in this book as the author wanted it to be self-contained. Aluffi explains each topics in a personal style without losing rigour and this book is a favourite among many who have learnt Category Theory. The book is a bit dense at 700 pages but the added advantage is that you get exposed to homological algebra, something that connects algebra with topology, towards the end of the book. I consider this a great read to widen your expertise once you have gotten a cursor understanding of abstract algebra and categorical language.

#+BEGIN_HTML
<img width="300px" align="left" src="./img/awodey-category-theory.png" />
#+END_HTML

** [[https://amzn.to/2HAe42N][Category Theory]]

#+BEGIN_HTML
<img src="./img/steve-awodey.png" />
<p>Steve Awodey</p>
<br /><br /><br /><br />
#+END_HTML

Steve Awodey’s work is considered to be a book that goes slightly braoder that Lawvere’s work but for the prerequisities it assumes is on the same level as Conceptual Mathematics. It is a highly recommended work among Category Theorists.

Lectures to this book is available here: https://www.youtube.com/playlist?list=PLGCr8P_YncjVjwAxrifKgcQYtbZ3zuPlb

** [[https://arxiv.org/abs/1612.09375][Basic Category Theory]]

#+BEGIN_HTML
<img width="300px" align="left" src="./img/basic-category-theory.jpg" />
<img src="./img/tom-leinster.png" />
<p>Tom Leinster</p>
<br /><br /><br /><br />
#+END_HTML

** [[https://amzn.to/2Vr801a][Category Theory for Scientists]]
[[./img/category-theory-for-scientists.jpg]]
David I. Spivak

** [[https://github.com/hmemcpy/milewski-ctfp-pdf/][Category Theory for Programmers]]
[[./img/category-theory-for-programmers.jpg]]
Bartosz Milewski

Videos for this book is available as a series here: 
https://www.youtube.com/playlist?list=PLbgaMIhjbmEnaH_LTkxLI7FMa2HsnawM_

** [[http://www.cs.ox.ac.uk/people/bob.coecke/ctfwp1_final.pdf][Categories for the Working Physicist]]
[[./img/categories-for-the-working-physicist.jpg]]
Bob Coecke and Eric Oliver Paquette

** [[https://amzn.to/2yARvpW][Category Theory in Context]]
[[./img/category-theory-in-context.jpg]]
Emily Riehl

Available as a free PDF here: http://www.math.jhu.edu/~eriehl/context.pdf

** [[https://amzn.to/3mVREsY][An Introduction to Category Theory]]
[[./img/an-introduction-to-category-theory.jpg]]
Harold Simmons

** [[https://arxiv.org/abs/1102.1313][Introduction to Categories and Categorical Logic]]
[[./img/computational-category-theory.jpg]]
Samson Abramsky and Nikos Tzevelekos

** Computational Category Theory
[[./img/computational-category-theory.jpg]]
Rydehead and Burstall

Available free here: 
http://www.cs.man.ac.uk/~david/categories/

** [[https://amzn.to/34Sc3qc][Basic Category Theory for Computer Scientists]]
[[./img/basic-category-theory-for-computer-scientists.jpg]]
Benjamin Pierce

** [[https://projecteuclid.org/euclid.bia/1403013939][Topoi: The Categorical Analysis of Logic]]
[[./img/topoi-the-categorical-analysis-of-logic.jpg]]

** [[https://amzn.to/3mHPk8D][Categories for the Working Mathematician]]
[[./img/categories-for-the-working-mathematician.jpg]]
Saunders Mac Lane

** Adjacent Reads

Now these are works a bit removed from Category Theory, but still I feel will give one a good understanding of the big picture if put in the effort to understand these:

** [[https://amzn.to/2Vp5HLJ][Topology via Logic]]
[[./img/topology-via-logic.jpg]]
Steven Vickers

** [[https://edinburghuniversitypress.com/book-diagrammatic-immanence.html][Diagrammatic Immanence]]
[[./img/diagrammatic-immanence.jpg]]

** Under investigation

*** [[https://maartenfokkinga.github.io/utwente/mmf92b.pdf][A Gentle Introduction to Category Theory: The Calculational Approach]]

*** [[https://arxiv.org/abs/1912.10642][Notes on Category Theory with examples from basic mathematics (2020)]]

* Papers and Presentations

[[./img/how-categories-arise-naturally.jpg]]
** [[https://people.cs.clemson.edu/~steve/Papers/Rosetta/rosetta1.pdf][Category Theory — Rosetta Paper 1: How Categories Arise Naturally]]

[[./img/an-introduction-to-category-theory-for-software-engineers.jpg]]
** [[http://www.cs.toronto.edu/~sme/presentations/cat101.pdf][An introduction to Category Theory for Software Engineers]]
Steve Easterbrook

[[./img/a-categorical-manifesto.jpg]]
** [[https://www.cs.ox.ac.uk/files/3395/PRG72.pdf][A Categorical Manifesto]]
Goguen

[[./img/a categorical-programming-language.jpg]]
** [[http://web.sfc.keio.ac.jp/~hagino/thesis.pdf][A Categorical Programming Language]]
Tatsuya Hagino

* Tools

[[./img/charity.jpg]]
** Charity

[[./img/seven-sketches-in-compositionality.jpg]]
** [[https://github.com/msakai/cpl][CPL Interpreter]]

An interpreter for Tatsuya’s work above.


* Talks

* Series

* The Catsers

* Single Session

** [[https://www.youtube.com/watch?v=cJ46AOEOc14][David Spivak’s intro into Category Theory]]
** [[https://www.youtube.com/watch?v=BLk4DlNZkL8][Adjunctions in Everyday Life]]
** [[https://www.youtube.com/watch?v=JMP6gI5mLHc][Category Theory: The Essence of Interface Design]]

* Compilations

** [[https://nodebook.io/nodebook/717/t/x=359.07&y=391.68&k=0.53][Nodebook by Dragan Okanovic]]
This is a really nice collection of some of the resources laid out in a "graph"ical format by Dragan.

** [[https://github.com/statebox/awesome-applied-ct][Awesome applied CT]]
Compilation of applications of Category Theory

** [[http://www.logicmatters.net/categories/][Compendium by Logic Matters]]
A really good roundup of resources for learning Category Theory

* Contributors

People who have helped me with resources:

- [[https://twitter.com/mimblewabe][Marek Bernát]]
- [[Edward Ochs]]
- And a lot of people who were generous enough to share their recommendations on Reddit / Stackoverflow / Twitter / Quora
