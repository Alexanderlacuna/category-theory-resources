* Category Theory Resources

[[./img/category-theory-cover.png]]

This is a curation of introductory materials aimed at an enthusiast who wants to learn Category Theory. I have only recently gotten into learning Category Theory and as a result this list is only a partial sampling of the great wealth of materials out there. Please send a [[https://twitter.com/prathyvsh][tweet]], if you think I have missed out some great work in the field in this repo.

Category Theory is considered by many to be an involved domain of study to get into. It becomes a ground for unification of mathematical ideas and operations from varied domains. And the way it achieves this is by taking an abstract vantage point.

This abstract viewpoint is both the strength and weakness of the approach. The abstract nature of the subject makes it very powerful in that it gives it the freedom to unite very different fields of study such as say topology and computation, but at the same time this abstract nature means that it becomes a rather tough endeavour to make its bearings on concrete subjects of study, hard to elucidate without first learning enough terminology and understanding to set up a framework for discourse.

Ultimately, as Christopher Strachey put it, the divide between theory and practice is artificial and injurious. For doing computing both to be put together in a symbiotic circle to make each other a fertile field of knowledge and action. Category Theory seen this way is a subject whose keen study will payoff in the form of better decision-making in your day-to-day jobs. To articulate this exactly is something a bit elusive to me at the moment as I’m at the same time a learner, only trying to come in terms with the deep implications Category Theory has on my work.

So this repository is a curation of the best resources that come across my way and that has helped me in understanding the lay of the land better. Hope you enjoy going through it as much as I enjoyed in putting it together. Happy learning!

* Introduction

#+BEGIN_HTML
<img align="left" src="./img/samuel-eilenberg.png" />
<img align="left" src="./img/saunders-maclane.png" />
#+END_HTML

Category Theory is a domain of study that emerged close to 1940s in Mathematics. By that time, the tangled web of inquiries in mathematics had bore much theoretical studies conducted in the fields it attempted to unify. It was invented by Samuel Eilenberg and Saunders Mac Lane to study algebraic topology, where they wanted to introduce the idea of natural transformation to make tractable the idea of functors between functors (A functor is a category theoretical term that roughly means functions between functions). If you enjoy reading up the history of the subject, I highly recommend this accessible work by Garlandus [[https://garlandus.co/OfGroupsAndMonads.html][describing the emergence of Category Theory]]. Garlandus’ essay holds a high place in my mind, it is the kind of work that gives a sufficient background on the field discussing details of how it took shape as a result of contributions from multiple people. He locates Hilbert’s Göttingen as a central locus that lead to the germination of work on Category Theory.

Now, the application to Computer Science may seem arbitrary, but this application came after deep investigations into computational structures from around 1960s to today, where multiple links between algebra, automata, computational control/data structures, recursion schemes were uncovered. I am putting together a resource that unravels these links to multiple resources which you can access here.

A curious fact is that one of the co-inventors Samuel Eilenberg would go on to apply his ideas to automata after inventing Category Theory!

* Overview

Because of the standing of Category Theory as a general domain of inquiry, I feel it better to first get a cursory knowledge in functional programming and abstract algebra before tackling the subject. These paradigms are the closest ones to the work done in Category Theory and if you come around to Category Theory from say an imperative programming setting, I feel it might be a bit hard to relate to why such machinery is needed.

So I recommend you develop some amount of functional programming knowledge before you come around to Category Theory.

Towards this purpose I recommend some of these books:

HtDP
Introduction to Functional Programming
SICP

Once you have enough functional programming knowledge under your belt, next step is to develop sufficient understanding of the field of mathematics. This knowledge while not necessary, would make the transition into CT much more smooth as there are deep links within CT that lead you onto very different domains and having a  well-rounded knowledge of the field would help you.

To make this case, let me first mention this book by Saunders Mac Lane, the co-inventor of the field where he captures the ideas of mathematics in a comprehensive way. This book doubles out as an atlas of mathematical inquiry as there are multiple schemas in this book that give you a map on how to navigate the whole field. Such is the kind of breadth and depth that has gone into building Category Theory. I don’t mean this as something to intimidate the reader, but just to provide the awareness that the field is vast and finds application in many areas, computation being one among many.

Category Theory is the study of structures and for this purpose, I find it most important to have an overview of the field in a visual manner. Many of the ideas being talked about in Category Theory spawns dynamic pictures of morphisms in my head, but I find it hard to visualize them as there is so little Category Theory with pictures around. To start seeing how the pieces fit together one has to recourse to abstract diagrams and try to connect the concepts with how the same concepts model things in topology. To aid in this, let me draw your attention to this incomplete though beautiful work by Boris Marinov: https://boris-marinov.github.io/category-theory-illustrated/

Now with focus to computation, the best way to develop an expertise I feel is to learn abstract algebra which undergirds the algebraic species that are often talked about in Category Theory. To make sense of them, let me mention few books. It is not mandatory reading if you want to dive first into Category Theory, in fact some of the books that I have put together here allows one to learn Category Theory without much prerequisite knowledge.

1/ A Book of Abstract Algebra by Pinter

2/ A Concrete Approach to Abstract Algebra by W. W. Sawyer

3/ Visual Group Theory by Nathan Carter

I will try to expand on these books once I have better perspective, but these three seem to be the most promising to get a good overview of the algebraic structures.

Once this is done, I’ll recommend the following works to get through to understand the field deeper.

* David I. Spivak and Brendan Fong

** Book [[https://amzn.to/2RUAIoU][Seven Sketches in Compositionality]]

** Videos

*** [[https://www.youtube.com/watch?v=cJ46AOEOc14][David Spivak’s intro into Category Theory]]

* Saunders Mac Lane

** [[https://amzn.to/3mHPk8D][Categories for the Working Mathematician]]

* Benjamin Pierce

** [[https://amzn.to/34Sc3qc][Basic Category Theory for Computer Scientists]]

* Emily Riehl

** [[https://amzn.to/2yARvpW][Category Theory in Context]]
Available as a free PDF here: http://www.math.jhu.edu/~eriehl/context.pdf

* Bartosz Milewski’s work

** Book
[[https://github.com/hmemcpy/milewski-ctfp-pdf/][Category Theory for Programmers]]

** Videos
https://www.youtube.com/playlist?list=PLbgaMIhjbmEnaH_LTkxLI7FMa2HsnawM_

* [[https://amzn.to/2Vr801a][Category Theory for Scientists]]

* William Lawvere and Stephen Schaneul

** [[https://amzn.to/2zjvbli][Conceptual Mathematics: A First Introduction to Categories]]

* Paulo Aluffi

** [[https://amzn.to/3brrok3][Algebra: Chapter 0]]

** Tangential Reads

Now these are works a bit removed from Category Theory, but still I feel will give one a good understanding of the big picture if put in the effort to understand these:

*** [[https://amzn.to/2Vp5HLJ][Topology via Logic]]
Steven Vickers

* Papers

** [[https://people.cs.clemson.edu/~steve/Papers/Rosetta/rosetta1.pdf][Categories for the Working Mathematician Category Theory — Rosetta Paper 1: How Categories Arise Naturally]]
** [[http://www.cs.toronto.edu/~sme/presentations/cat101.pdf][An introduction to Category Theory for Software Engineers]]

* Talks

** [[https://www.youtube.com/watch?v=BLk4DlNZkL8][Adjunctions in Everyday Life]]
** [[https://www.youtube.com/watch?v=JMP6gI5mLHc][Category Theory: The Essence of Interface Design]]

* Compilations

** [[https://nodebook.io/nodebook/717/t/x=359.07&y=391.68&k=0.53][Nodebook by Dragan Okanovic]]
This is a really nice collection of some of the resources laid out in a "graph"ical format by Dragan.
